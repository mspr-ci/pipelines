image: node:latest

# first, install Cypress, then run all tests (in parallel)
stages:
  - build
  - deploy


# to cache both npm modules and Cypress binary we use environment variables
# to point at the folders we can list as paths in "cache" job settings
variables:
  npm_config_cache: "$CI_PROJECT_DIR/.npm"
  CYPRESS_CACHE_FOLDER: "$CI_PROJECT_DIR/cache/Cypress"
  POSTGRES_DB: mspr_ci
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: "postgres"
  POSTGRES_HOST_AUTH_METHOD: trust
  JDBC_DATABASE_URL: mspr_ci
  JDBC_DATABASE_USERNAME: postgres
  JDBC_DATABASE_PASSWORD: "postgres"

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - .npm
    - cache/Cypress
    - node_modules

cypress:
  image: cypress/base:10
  stage: build
  script:
    - npm ci
    - npx cypress cache path
    - npx cypress cache list

docker run:
  stage: deploy
  image: docker:latest
  services:
    - docker:dind
    - postgres:12.2-alpine
  script: 
    - echo "{\"auths\":{\"$DOCKER_REGISTRY\":{\"username\":\"$DOCKER_USER\",\"password\":\"$DOCKER_PASSWORD\"}}}" >> ~/.docker/config.json
    - docker pull docker.pkg.github.com/mspr-ci/api/invoice_api:0.0.1-snapshot
    - docker pull docker.pkg.github.com/mspr-ci/ihm/invoice_ihm:latest
    - docker run -d -it -p 8341:8341 invoice_api:0.0.1-snapshot
    - docker run -d -it -p 9000:9000 invoice_ihm:latest


