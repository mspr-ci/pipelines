image: gradle:jdk11

stages:
  - prepare
  - test
  - quality
  - build:package
  - build:image
  - deploy

cache:
  paths:
    - .gradle/wrapper
    - .gradle/caches

run tests:
  stage: test
  script: gradle -Pprod clean check jacocoTestReport sonarqube
  artifacts:
    name: "jacocoTestReport"
    paths:
      - build/reports/jacoco/test/jacocoTestReport.xml
  coverage: '/Total.*?([0-9]{1,3})%/'

run sonar:
  stage: quality
  script:
    - echo "sonar.login=${SONAR_TOKEN}" >> sonar-project.properties
    - gradle sonarqube
  artifacts:
    name: "jacocoTestReport"
    paths:
      - build/reports/jacoco/test/jacocoTestReport.xml

build package:
  stage: build:package
  script: gradle -Pprod clean bootJar
  artifacts:
    paths:
      - build/libs/*.jar

deploy image:
  stage: build:image
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - PACKAGE_VERSION=$(cat build.gradle | grep "version =" | head -1 | awk -F= "{ print $2 }" | sed 's/[version=,\",]//g' | tr -d '[[:space:]]')
    - echo "{\"auths\":{\"$DOCKER_REGISTRY\":{\"username\":\"$DOCKER_USER\",\"password\":\"$DOCKER_PASSWORD\"},\"registry.heroku.com\":{\"username\":\"_\",\"password\":\"$HEROKU_AUTH_TOKEN\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/docker/Dockerfile --destination $DOCKER_REGISTRY/$DOCKER_IMAGE:$PACKAGE_VERSION --destination $DOCKER_REGISTRY/$DOCKER_IMAGE:latest --destination registry.heroku.com/mspr-ci-production-api:$CI_COMMIT_SHORT_SHA --digest-file imageid.txt
  artifacts:
    paths:
      - imageid.txt

deploy production:
  stage: deploy
  image: alpine
  script:
    - apk add curl
    - |-
      curl -X PATCH https://api.heroku.com/apps/mspr-ci-production-api/formation  --header "Content-Type: application/json" --header "Accept: application/vnd.heroku+json; version=3.docker-releases" --header "Authorization: Bearer ${HEROKU_AUTH_TOKEN}" --data '{ "updates": [ { "type": "web", "docker_image": "'$(cat imageid.txt)'" } ] }'
  only:
    - master

deploy staging:
  stage: deploy
  image: ruby:latest
  script:
    - apt-get update -qy
    - apt-get install -y ruby-dev
    - gem install dpl
    - dpl --provider=heroku --app=$HEROKU_APP_STAGING --api-key=$HEROKU_API_KEY
  only:
    - staging


