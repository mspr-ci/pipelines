image: gradle:jdk11

stages:
  - test
  - build
  - deploy

cache:
  paths:
    - .gradle/wrapper
    - .gradle/caches

test:
  stage: test
  script: gradle test integrationTest jacocoTestReport
  artifacts:
    name: "jacocoTestReport"
    paths:
      - build/reports/jacoco/test/jacocoTestReport.xml

coveralls:
  stage: test
  script: gradle coveralls

renovate:
  stage: build
  image: docker:alpine
  script:
    - docker run -e GITLAB_TOKEN="$GITLAB_TOKEN" -e GITHUB_TOKEN="$GITHUB_TOKEN" -v $PWD/config.js:/usr/src/app/config.js renovate/renovate:13 $(cat repositories.txt | xargs)

build package:
  stage: build
  script: gradle -Pprod clean bootJar
  artifacts:
    paths:
      - build/libs/*.jar

build image:
  stage: deploy
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - PACKAGE_VERSION=$(cat build.gradle | grep "version =" | head -1 | awk -F= "{ print $2 }" | sed 's/[version=,\",]//g' | tr -d '[[:space:]]')
    - echo $DOCKER_REGISTRY/$DOCKER_IMAGE:$PACKAGE_VERSION
    - echo "{\"auths\":{\"$DOCKER_REGISTRY\":{\"username\":\"$DOCKER_USER\",\"password\":\"$DOCKER_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/docker/Dockerfile --destination $DOCKER_REGISTRY/$DOCKER_IMAGE:$PACKAGE_VERSION --destination $DOCKER_REGISTRY/$DOCKER_IMAGE:latest

deploy production:
  stage: deploy
  image: ruby:latest
  script:
    - apt-get update -qy
    - apt-get install -y ruby-dev
    - gem install dpl
    - dpl --provider=heroku --app=$HEROKU_APP_PRODUCTION --api-key=$HEROKU_API_KEY
  only:
    - master

deploy staging:
  stage: deploy
  image: ruby:latest
  script:
    - apt-get update -qy
    - apt-get install -y ruby-dev
    - gem install dpl
    - dpl --provider=heroku --app=$HEROKU_APP_STAGING --api-key=$HEROKU_API_KEY
  only:
    - staging


